plugins {
  id 'java'
  id 'war'
}

group = 'net.thomasmaestas'
version = '0.0.1-SNAPSHOT'


sourceCompatibility = 1.8
targetCompatibility = 1.8

ext.tomcatHome= 'C:/Program Files/apache-tomcat-8.5.50'
ext.tomcatWebApps = "$tomcatHome/webapps"

war {
	archiveName = 'gradleWar1'
}

repositories{
	mavenCentral()
}

task deployToTomcat(type: Copy, dependsOn: 'war') {
	from war 
	into "$tomcatWebApps"
}

dependencies { 

	//depends on commons logging so we need to use the jcl-over-slf4j once exluded commons logging for backward compatibility  
	//compile 'org.springframework:spring-webmvc:4.0.3.RELEASE'
	implementation ('org.springframework:spring-webmvc:4.0.3.RELEASE') {
		exclude group: 'commons-logging', module: 'commons-logging'
	} 

	// this is needed once we exclude commons logging for backward compatibility issues for this verion of Spring MVC
	//https://www.slf4j.org/legacy.html
	implementation 'org.slf4j:jcl-over-slf4j:1.7.25'

	// standardise on the SLF4j logging interface
	//https://www.slf4j.org/manual.html
	implementation 'org.slf4j:slf4j-log4j12:1.7.25'

	implementation 'javax.inject:javax.inject:1'
	implementation 'org.apache.commons:commons-math3:3.2'
	implementation 'jstl:jstl:1.2'

// standardise on the SLF4j logging interface
	//https://www.slf4j.org/manual.html
	implementation 'org.slf4j:slf4j-log4j12:1.7.25'
	// implementation 'log4j:log4j:1.2.17' //This comes as a transient dependency with slf4j over log4j
		
		
	compileOnly "javax.servlet:javax.servlet-api:3.0.1"
	testImplementation	'junit:junit:4.11'

}


